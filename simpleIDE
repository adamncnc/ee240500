#include "simpletools.h"
#include "servo.h"
#include "fdserial.h"
#include "servodiffdrive.h"
#include "ping.h"
#include "fdserial.h"
           

#define PIN_SOUND       26 // pin for the speaker, default=26
#define PIN_XBEE_RX      0
#define PIN_XBEE_TX      1
#define PIN_SERVO_LEFT  14
#define PIN_SERVO_RIGHT 15

int trb, trf, tlf, tlb, dist=8;
int f = 0, r = 0, l = 0;

int sense();
int decide();
int proceed();

char char2lowercase (char c);

int main (void) {

	fdserial *xbee;
	xbee = fdserial_open(PIN_XBEE_RX, PIN_XBEE_TX, 0, 9600);
	drive_pins(PIN_SERVO_LEFT, PIN_SERVO_RIGHT);

	pause(1000);
	putchar(CLS);
	fdserial_rxFlush(xbee);

	while (1) {
		int ch = fdserial_rxChar(xbee);
		ch = char2lowercase(ch);
		fdserial_rxFlush(xbee);
		switch ((char) ch) {
			case 's':
				print("Start\n");
				pause(2000);
          decide();
          proceed();
          pause(2000);
          decide();
          proceed();
          pause(2000);
          decide();
          proceed();
          pause(2000);
          decide();
          proceed();
          pause(2000);
          decide();
          proceed();
				break;
			case 'p':
				print("Pause\n");
				servo_speed(14, 0);
          servo_speed(15, 0);
				break;
			default:
				print("Invalid Command\n");
				pause(700);
				break;
		}
		print("%c", (char) ch);
		pause(100);
		fdserial_txChar(xbee, ch);
		fdserial_txFlush(xbee);
	}

}

char char2lowercase (char c) {
	return 'A'<=c && c<='Z' ? c+32 : c;
}

int sense() 
{
    high(2); high(3); high(12); high(13);
    pause(1);                                 // Wait for circuit to charge
    trb = rc_time(2, 1);
    trf = rc_time(3, 1);
    tlf = rc_time(12, 1);
    tlb = rc_time(13, 1);
    
    f = trf/2 + tlf/2;
    r = trf/2 + trb/2;
    l = tlf/2 + tlb/2;
}  

int decide()
{
    int i = 0;
    int end = 0;
    int dcr = 0, dcl = 0, dcf = 0;             //double check parameters
    
    while (dcr<50 && dcl<50){
        sense();
        if (r<=l) {dcl--; dcr++;}
        else {dcr--; dcl++;}        
    }
    if (dcr==50) {
      while (end!=1) {
        sense();
        servo_speed(14, 15);
        servo_speed(15, 15);
        pause(25);
        servo_speed(14, 0);
        servo_speed(15, 0);
        if (f<trf && f<trb) {
            for (i=0, dcf=0 ; i<20 ; i++) {
                sense();
                if (f<trf && f<trb) dcf++;
            }
            if (dcf >= 14) end = 1;            
        }  
      }                       
    }
    else if (dcl==50) {
      while (end!=1) {
        sense();
        servo_speed(14, -15);
        servo_speed(15, -15);
        pause(25);
        servo_speed(14, 0);
        servo_speed(15, 0);
        if (f<tlf && f<tlb) {
            for (i=0, dcf=0 ; i<20 ; i++) {
                sense();
                if (f<tlf && f<tlb) dcf++;
            }
            if (dcf >= 14) end = 1;            
        }   
      }          
    }
}

int proceed() {
    int end = 0;
    int dc = 0;
    int i = 0;
    
    servo_speed(14, 30);
    servo_speed(15, -30);
    while (end != 1) {
        for (i=0, dc=0 ; i<=50 ; i++) {
           dist = ping_cm(8);
           pause(10);
           if (dist<8) dc++;
        }        
        if (dc>=30) end = 1;
    }
    servo_speed(14, 30);
    servo_speed(15, 30);
    pause(1000);
    servo_speed(14, 30);
    servo_speed(15, -90);
    pause(2500);
    servo_speed(14, 0);
    servo_speed(15, 0);
}
